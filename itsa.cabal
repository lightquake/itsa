Name:                itsa
Version:             0.1
Synopsis:            A small blog engine written using Snap.
Description:         itsa is intended to be extremely simple to use; you write
                     your posts in markdown files and itsa serves them. No SQL,
                     no web interface, nothing.
License:             BSD3
Author:              Author
Maintainer:          lightquake@amateurtopologist.com
Stability:           Experimental
Category:            Web
Build-type:          Simple
Cabal-version:       >=1.2

Flag development
  Description: Whether to build the server in development (interpreted) mode
  Default: False

Flag old-base
  default: False
  manual: False

Executable itsa
  hs-source-dirs: src
  main-is: Main.hs

  Build-depends:
    blaze-html                >= 0.5,
    blaze-markup              >= 0.5,
    bytestring                >= 0.9.1,
    containers,
    data-default,
    hamlet                    >= 1.0,
    MonadCatchIO-transformers >= 0.2.1,
    mtl                       >= 2,
    pandoc                    >= 1.10,
    shakespeare               >= 1.0,
    snap                      >= 0.11,
    snap-core                 >= 0.9,
    snap-server               >= 0.9,
    snap-loader-static        >= 0.9,
    system-fileio             >= 0.3,
    system-filepath           >= 0.4,
    tables                    >= 0.2,
    template-haskell,
    text                      >= 0.11,
    time                      >= 1.1,
    transformers              >= 0.3,
    xmlhtml                   >= 0.1,
    yaml                      >= 0.8

  if flag(old-base)
    build-depends:
      base                      >= 4        && < 4.4,
      lens                      >= 3.7.6    && < 3.8
  else
    build-depends:
      base                      >= 4.4      && < 5,
      lens                      >= 3.7.6    && < 3.9

  if flag(development)
    build-depends:
      snap-loader-dynamic == 0.10.*
    cpp-options: -DDEVELOPMENT
    -- In development mode, speed is already going to suffer, so skip
    -- the fancy optimization flags.  Additionally, disable all
    -- warnings.  The hint library doesn't give an option to execute
    -- compiled code when there were also warnings, so disabling
    -- warnings allows quicker workflow.
    ghc-options: -threaded -w
  else
    if impl(ghc >= 6.12.0)
      ghc-options: -threaded -Wall -fwarn-tabs -funbox-strict-fields -O2
                   -fno-warn-orphans -fno-warn-unused-do-bind
    else
      ghc-options: -threaded -Wall -fwarn-tabs -funbox-strict-fields -O2
                   -fno-warn-orphans
